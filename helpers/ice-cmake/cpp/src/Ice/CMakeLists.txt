set(GENERATED_ICE_SOURCES
	BuiltinSequences.h
	BuiltinSequences.cpp
	Communicator.h
	Communicator.cpp
	Connection.h
	Connection.cpp
	ConnectionF.h
	Connection.cpp
	Current.h
	Current.cpp
	Endpoint.h
	Endpoint.cpp
	EndpointF.h
	EndpointF.cpp
	EndpointTypes.h
	EndpointTypes.cpp
	FacetMap.h
	FacetMap.cpp
	Identity.h
	Identity.cpp
	ImplicitContext.h
	ImplicitContext.cpp
	ImplicitContextF.h
	ImplicitContextF.cpp
	Instrumentation.h
	Instrumentation.cpp
	InstrumentationF.h
	InstrumentationF.cpp
	LocalException.h
	LocalException.cpp
	Locator.h
	Locator.cpp
	LocatorF.h
	LocatorF.cpp
	Logger.h
	Logger.cpp
	LoggerF.h
	LoggerF.cpp
	Metrics.h
	Metrics.cpp
	ObjectAdapter.h
	ObjectAdapter.cpp
	ObjectAdapterF.h
	ObjectAdapterF.cpp
	ObjectFactory.h
	ObjectFactory.cpp
	Plugin.h
	Plugin.cpp
	PluginF.h
	PluginF.cpp
	Process.h
	Process.cpp
	ProcessF.h
	ProcessF.cpp
	Properties.h
	Properties.cpp
	PropertiesAdmin.h
	PropertiesAdmin.cpp
	PropertiesF.h
	PropertiesF.cpp
	RemoteLogger.h
	RemoteLogger.cpp
	Router.h
	Router.cpp
	RouterF.h
	RouterF.cpp
	ServantLocator.h
	ServantLocator.cpp
	ServantLocatorF.h
	ServantLocatorF.cpp
	SliceChecksumDict.h
	SliceChecksumDict.cpp
	ValueFactory.h
	ValueFactory.cpp
	Version.h
	Version.cpp
)

set_source_files_properties(${GENERATED_ICE_SOURCES} PROPERTIES GENERATED TRUE)

add_library(ice)

target_sources(ice
   PRIVATE
      ${GENERATED_ICE_SOURCES}
	   Acceptor.cpp
	   Acceptor.h
	   AcceptorF.h
	   ACM.cpp
	   ACM.h
	   ACMF.h
	   Application.cpp
	   ArgVector.cpp
	   ArgVector.h
	   AsyncResult.cpp
	   Base64.cpp
	   Base64.h
	   BatchRequestQueue.cpp
	   BatchRequestQueue.h
	   Buffer.cpp
	   CollocatedRequestHandler.cpp
	   CollocatedRequestHandler.h
	   CommunicatorI.cpp
	   CommunicatorI.h
	   Cond.cpp
	   ConnectionFactory.cpp
	   ConnectionFactory.h
	   ConnectionFactoryF.h
	   ConnectionI.cpp
	   ConnectionI.h
	   ConnectionRequestHandler.cpp
	   ConnectionRequestHandler.h
	   Connector.cpp
	   Connector.h
	   ConnectorF.h
	   ConnectRequestHandler.cpp
	   ConnectRequestHandler.h
	   ConnectRequestHandlerF.h
	   CountDownLatch.cpp
	   DefaultsAndOverrides.cpp
	   DefaultsAndOverrides.h
	   DefaultsAndOverridesF.h
	   DispatchInterceptor.cpp
	   DLLMain.cpp
	   DynamicLibrary.cpp
	   EndpointFactory.cpp
	   EndpointFactory.h
	   EndpointFactoryF.h
	   EventHandler.cpp
	   EventHandler.h
	   EventHandlerF.h
	   Exception.cpp
	   FactoryTable.cpp
	   FactoryTableInit.cpp
	   GCObject.cpp
	   HashUtil.h
	   HttpParser.cpp
	   HttpParser.h
	   Ice.rc
	   IconvStringConverter.cpp
	   ImplicitContextI.cpp
	   ImplicitContextI.h
	   Incoming.cpp
	   IncomingAsync.cpp
	   IncomingRequest.h
	   Initialize.cpp
	   InputStream.cpp
	   Instance.cpp
	   Instance.h
	   InstrumentationI.cpp
	   InstrumentationI.h
	   IPEndpointI.cpp
	   IPEndpointI.h
	   IPEndpointIF.h
	   LocalObject.cpp
	   LocatorInfo.cpp
	   LocatorInfo.h
	   LocatorInfoF.h
	   LoggerAdminI.cpp
	   LoggerAdminI.h
	   LoggerI.cpp
	   LoggerI.h
	   LoggerUtil.cpp
	   MetricsAdminI.cpp
	   MetricsObserverI.cpp
	   Network.cpp
	   Network.h
	   NetworkF.h
	   NetworkProxy.cpp
	   NetworkProxy.h
	   NetworkProxyF.h
	   Object.cpp
	   ObjectAdapterFactory.cpp
	   ObjectAdapterFactory.h
	   ObjectAdapterFactoryF.h
	   ObjectAdapterI.cpp
	   ObjectAdapterI.h
	   ObserverHelper.cpp
	   OpaqueEndpointI.cpp
	   OpaqueEndpointI.h
	   OutgoingAsync.cpp
	   OutputStream.cpp
	   PluginManagerI.cpp
	   PluginManagerI.h
	   PropertiesAdminI.cpp
	   PropertiesAdminI.h
	   PropertiesI.cpp
	   PropertiesI.h
	   PropertyNames.cpp
	   PropertyNames.h
	   Protocol.cpp
	   ProtocolInstance.cpp
	   ProtocolInstance.h
	   ProtocolInstanceF.h
	   ProtocolPluginFacade.cpp
	   ProtocolPluginFacade.h
	   ProtocolPluginFacadeF.h
	   Proxy.cpp
	   ProxyFactory.cpp
	   ProxyFactory.h
	   Reference.cpp
	   Reference.h
	   ReferenceFactory.cpp
	   ReferenceFactory.h
	   ReferenceFactoryF.h
	   RegisterPluginsInit.cpp
	   RegisterPluginsInit.h
	   ReplyStatus.h
	   RequestHandler.cpp
	   RequestHandler.h
	   RequestHandlerFactory.cpp
	   RequestHandlerFactory.h
	   ResponseHandler.cpp
	   ResponseHandler.h
	   RetryQueue.cpp
	   RetryQueue.h
	   RetryQueueF.h
	   RouterInfo.cpp
	   RouterInfo.h
	   RouterInfoF.h
	   Selector.cpp
	   Selector.h
	   ServantManager.cpp
	   ServantManager.h
	   Service.cpp
	   SHA1.cpp
	   SharedContext.h
	   SliceChecksums.cpp
	   SlicedData.cpp
	   StreamSocket.cpp
	   StreamSocket.h
	   StringConverterPlugin.cpp
	   StringUtil.h
	   SysLoggerI.cpp
	   SysLoggerI.h
	   SystemdJournalI.cpp
	   SystemdJournalI.h
	   TcpAcceptor.cpp
	   TcpAcceptor.h
	   TcpConnector.cpp
	   TcpConnector.h
	   TcpEndpointI.cpp
	   TcpEndpointI.h
	   TcpTransceiver.cpp
	   TcpTransceiver.h
	   Thread.cpp
	   ThreadPool.cpp
	   ThreadPool.h
	   Timer.cpp
	   TraceLevels.cpp
	   TraceLevels.h
	   TraceLevelsF.h
	   TraceUtil.cpp
	   TraceUtil.h
	   Transceiver.cpp
	   Transceiver.h
	   TransceiverF.h
	   UdpConnector.cpp
	   UdpConnector.h
	   UdpEndpointI.cpp
	   UdpEndpointI.h
	   UdpTransceiver.cpp
	   UdpTransceiver.h
	   Value.cpp
	   ValueFactoryManagerI.cpp
	   ValueFactoryManagerI.h
	   VirtualShared.h
	   WSAcceptor.cpp
	   WSAcceptor.h
	   WSConnector.cpp
	   WSConnector.h
	   WSEndpoint.cpp
	   WSEndpoint.h
	   WSTransceiver.cpp
	   WSTransceiver.h
)

target_include_directories(ice 
   PRIVATE 
      ${CMAKE_SOURCE_DIR}/cpp/include
	   ${CMAKE_SOURCE_DIR}/cpp/src
      ${GENERATED_SOURCE_DIR}
      ${GENERATED_SOURCE_DIR}/Ice
)

if(CMAKE_CXX_STANDARD EQUAL 11)
	set(ICELIB_COMPILE_DEFS "${ICE_CPP11_COMPILE_DEFS}")
	set(CMAKE_RC_FLAGS ${ICE_RC_FLAGS})
else()
	set(ICELIB_COMPILE_DEFS "${ICE_CPP98_COMPILE_DEFS")
endif()

if(WIN32)
	if(MSVC)
		target_compile_options(ice PRIVATE 
			"/wd4996" 
			${ICE_COMPILE_OPTIONS} 
		)
		target_compile_definitions(ice PRIVATE 
			${ICELIB_COMPILE_DEFS}
		)

		if(BUILD_SHARED_LIBS)
			set(ICELIB_COMPILE_DEFS "${ICELIB_COMPILE_DEFS}" "ICE_API_EXPORTS")
		endif()

		if(BUILD_SHARED_LIBS)
			target_link_libraries(ice
				PRIVATE
					advapi32.lib
					ws2_32.lib
					Iphlpapi.lib
					rpcrt4.lib
					DbgHelp.lib
					Shlwapi.lib
			)
		endif()
		
		add_custom_command(TARGET ice
			COMMAND ${CMAKE_MC_COMPILER} ${CMAKE_CURRENT_SOURCE_DIR}/EventLoggerMsg.mc
			WORKING_DIRECTORY ${GENERATED_SOURCE_DIR}/Ice
			DEPENDS EventLoggerMsg.mc
			PRE_BUILD
		)
	endif()
endif()

add_dependencies(ice slice2cpp)

#function(CompileSlices slice2_bin slice_path slice_dir slice_target output_dir lang_std)
CompileSlices(slice2cpp
   ${SLICE_DIR}
   Ice
   ice
	${GENERATED_SOURCE_DIR}/Ice
	--impl-c++${CMAKE_CXX_STANDARD}
)

install(TARGETS ice DESTINATION lib)
